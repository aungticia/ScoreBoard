{"ast":null,"code":"var _jsxFileName = \"/Users/aungoo/Desktop/scoreboard/src/components/Stopwatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stopwatch = () => {\n  _s();\n\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  useEffect(() => {\n    console.log(\"Runnign side effect\");\n  }, [is]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stopwatch\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stopwatch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"stopwatch-time\",\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRunning(prevValue => !prevValue),\n      children: isRunning ? \"Stop\" : \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setElapsedTime(0),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Stopwatch, \"Rz4NAaLSI1e7oHsaomkHpnEvUbk=\");\n\n_c = Stopwatch;\nexport default Stopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["React","useEffect","useState","Stopwatch","isRunning","setIsRunning","elapsedTime","setElapsedTime","console","log","is","prevValue"],"sources":["/Users/aungoo/Desktop/scoreboard/src/components/Stopwatch.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nconst Stopwatch = () => {\n    const [isRunning, setIsRunning] = useState(false);\n    const [elapsedTime, setElapsedTime] = useState(0);\n\n    useEffect(() => {\n        console.log(\"Runnign side effect\");\n    }, [is]);\n    return (\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <span className=\"stopwatch-time\">0</span>\n        <button onClick={() => setIsRunning((prevValue) => !prevValue)}> \n            {isRunning ? \"Stop\" : \"Start\"}\n        </button>\n        <button onClick={() => setElapsedTime(0)}>Reset</button>\n      </div>\n    );\n}\n\nexport default Stopwatch;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAD,CAA9C;EAEAD,SAAS,CAAC,MAAM;IACZO,OAAO,CAACC,GAAR,CAAY,qBAAZ;EACH,CAFQ,EAEN,CAACC,EAAD,CAFM,CAAT;EAGA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,SAAS,EAAC,gBAAhB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAE,MAAML,YAAY,CAAEM,SAAD,IAAe,CAACA,SAAjB,CAAnC;MAAA,UACKP,SAAS,GAAG,MAAH,GAAY;IAD1B;MAAA;MAAA;MAAA;IAAA,QAHF,eAME;MAAQ,OAAO,EAAE,MAAMG,cAAc,CAAC,CAAD,CAArC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUH,CAjBD;;GAAMJ,S;;KAAAA,S;AAmBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}